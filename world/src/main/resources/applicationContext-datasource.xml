<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-3.1.xsd
						http://www.springframework.org/schema/data/jpa 
						http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd">
						
	<context:component-scan base-package="com.world">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />  -->
	</context:component-scan> 
	
	<!-- <context:component-scan base-package="com.world"/> -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
           <list>  
                 <value>classpath:log4j.properties</value> 
                 <value>classpath:jdbc.properties</value>  
           </list>  
        </property>  
    </bean> 
    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc_driver}"/>
		<property name="jdbcUrl" value="${jdbc_url}"></property>
		<property name="user" value="${jdbc_username}"/>
		<property name="password" value="${jdbc_password}"/>
		<property name="maxPoolSize" value="100"/>
		<property name="minPoolSize" value="10"/>
		<property name="initialPoolSize" value="10"/>
		<property name="maxIdleTime" value="60000"/>
	</bean>


	<!-- JPA实体管理器工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceProvider" ref="persistenceProvider" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaDialect" ref="jpaDialect" />
		<!-- 配置实体扫描路径 -->
		<property name="packagesToScan" value="com.world.entity" />
		<property name="jpaProperties">
			<props>
				<!--设置外连接抓取树的最大深度 -->
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">18</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <!-- 自动建表类型 validate|create|create-drop|update -->
                <prop key="hibernate.hbm2ddl.auto">validate</prop> 
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop> -->
                <!-- 是否显示SQL -->
                <prop key="hibernate.show_sql">false</prop>
                <!-- 显示SQL是否格式化 -->
                <prop key="hibernate.format_sql">false</prop>
                <!-- 关闭二级缓存 -->
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <!-- 关闭实体字段映射校验 -->
                <prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>
	
	<!-- 用于指定持久化实现厂商类 -->
	<bean id="persistenceProvider" class="org.hibernate.ejb.HibernatePersistence" /> 
	
	
	<!-- 用于设置JPA实现厂商的特定属性,只支持MYSQL数据库 -->
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="MYSQL" />
		
		
	<!-- 用于指定一些高级特性:根据不同数据库匹配不同的sql,比如：mysql支持limit分页而sqlserver不支持 -->
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />
	
	<jpa:repositories base-package="com.world.repository" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory">
	</jpa:repositories>
	
	<!-- 支持注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>